using ERCHTMS.Entity.CarManage;
using ERCHTMS.IService.CarManage;
using ERCHTMS.Service.CarManage;
using BSFramework.Util.WebControl;
using System.Collections.Generic;
using System;
using System.Data;
using ERCHTMS.Entity.SystemManage;

namespace ERCHTMS.Busines.CarManage
{
    /// <summary>
    /// 描 述：门禁设备管理
    /// </summary>
    public class HikdeviceBLL
    {
        private HikdeviceIService service = new HikdeviceService();

        #region 获取数据
        /// <summary>
        /// 获取列表
        /// </summary>
        /// <param name="queryJson">查询参数</param>
        /// <returns>返回列表</returns>
        public IEnumerable<HikdeviceEntity> GetList(string queryJson)
        {
            return service.GetList(queryJson);
        }
        /// <summary>
        /// 获取实体
        /// </summary>
        /// <param name="keyValue">主键值</param>
        /// <returns></returns>
        public HikdeviceEntity GetEntity(string keyValue)
        {
            return service.GetEntity(keyValue);
        }

        /// <summary>
        /// 用户列表
        /// </summary>
        /// <param name="pagination">分页</param>
        /// <param name="queryJson">查询参数</param>
        /// <returns></returns>
        public DataTable GetPageList(Pagination pagination, string queryJson)
        {
            return service.GetPageList(pagination, queryJson);
        }

        /// <summary>
        /// 获取实体
        /// </summary>
        /// <param name="keyValue">主键值</param>
        /// <returns></returns>
        public HikdeviceEntity GetDeviceEntity(string HikID)
        {
            return service.GetDeviceEntity(HikID);
        }

        #endregion

        #region 提交数据
        /// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="keyValue">主键</param>
        public void RemoveForm(string keyValue)
        {
            try
            {
                service.RemoveForm(keyValue);
            }
            catch (Exception)
            {
                throw;
            }
        }
        /// <summary>
        /// 保存表单（新增、修改）
        /// </summary>
        /// <param name="keyValue">主键值</param>
        /// <param name="entity">实体对象</param>
        /// <returns></returns>
        public void SaveForm(string keyValue, HikdeviceEntity entity)
        {
            try
            {
                service.SaveForm(keyValue, entity);
            }
            catch (Exception)
            {
                throw;
            }
        }

        /// <summary>
        ///  根据设备归属区域 ，获取该区域下所有的设备
        /// </summary>
        /// <param name="areaName"></param>
        /// <returns></returns>
        public List<HikdeviceEntity> GetDeviceByArea(string areaName)
        {
            return service.GetDeviceByArea(areaName);
        }

        /// <summary>
        /// 获取所有的设备区域
        /// </summary>
        /// <returns></returns>
        public IEnumerable<DataItemEntity> GetDeviceArea()
        {
            return service.GetDeviceArea();
        }
        #endregion
    }
}
