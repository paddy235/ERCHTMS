@model ERCHTMS.Web.Areas.KbsDeviceManage.Models.LableModel
@{;
    ViewBag.Title = "表单页面";
    Layout = "~/Views/Shared/_Form.cshtml";
}
<link rel="stylesheet" href="~/content/scripts/plugins/bootstrap-select/bootstrap-select.min.css" type="text/css" />
<link rel="stylesheet" href="~/Content/scripts/plugins/combo-select/combo.select.css">
<script src="~/content/scripts/plugins/bootstrap-select/bootstrap-select.min.js"></script>
<script src="~/Content/scripts/plugins/combo-select/jquery.combo.select.js"></script>
<script src="~/Content/scripts/business/common.js"></script>
<script>
    var keyValue = '@ViewBag.id';
    $(function () {
        jQuery('#LableTypeName').val(jQuery('#LableTypeId option:selected').text());

        jQuery('#LableTypeId').change(function () {
            jQuery('#LableTypeName').val(jQuery(this).find('option:selected').text());
        });

        jQuery('#Name').change(function () {
            jQuery('#UserId').val('');
        });
    });
    //初始化控件
    function initControl() {
        //获取表单
        if (!!keyValue) {
            $.SetForm({
                url: "../../KbsDeviceManage/Lablemanage/GetFormJson",
                param: { keyValue: keyValue },
                success: function (data) {
                    $("#form1").formDeserialize(data);
                    if (data.Type == 0) {
                        $("#tdname").html("姓名");
                        $("#tdIdCardOrDriver").html("身份证号");
                    } else {
                        $("#tdname").html("车牌");
                        $("#tdIdCardOrDriver").html("驾驶员");
                    }
                    //$("#LableDl").val("100%");
                    //$("#LableStatus").val("在线");
                }
            })
        }
    }
    //保存表单;
    function AcceptClick() {
        if (!$('#form1').Validform()) {
            return false;
        }
        var postData = $("#form1").formSerialize(keyValue);
        $.SaveForm({
            url: "@Url.Action("Edit")/" + keyValue,
            param: postData,
            loading: "正在保存数据...",
            success: function () {
                $.currentIframe().Search()
            }
        })
    }

    function selectCallback() {
        $("#Department").ComboBoxTreeSetText(arguments[3]);
    }

</script>
<div class="container-fluid">
    <div class="panel-body form-horizontal">
        <div class="form-group">
            <label class="col-xs-2 control-label">
                标签ID <span style="color:red;">*</span>
            </label>
            <div class="col-xs-10">
                @Html.TextBoxFor(x => x.LabelId, new { @class = "form-control", maxlength = "6", isvalid = "yes", checkexpession = "NotNull" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">
                标签类型 <span style="color:red;">*</span>
            </label>
            <div class="col-xs-10">
                @Html.DropDownListFor(x => x.LableTypeId, ViewData["list"] as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.HiddenFor(x => x.LableTypeName)
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">
                姓名 <span style="color:red;">*</span>
            </label>
            <div class="col-xs-10">
                <div class="input-group">
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control", maxlength = "30", isvalid = "yes", checkexpession = "NotNull" })
                    @Html.HiddenFor(x => x.UserId)
                    <div class="input-group-addon" onclick="selectUser({ deptId: '', checkMode: 0, mode: 0, winObject: document.body, domId: 'Name,,UserId,DeptId,DeptCode,DeptName,Phone,,IdCardOrDriver', callBack:selectCallback });">选择</div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">
                身份证号 <span style="color:red;">*</span>
            </label>
            <div class="col-xs-10">
                @Html.TextBoxFor(x => x.IdCardOrDriver, new { @class = "form-control", isvalid = "yes", checkexpession = "IDCard" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">
                电话 <span style="color:red;">*</span>
            </label>
            <div class="col-xs-10">
                @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", maxlength = "20", isvalid = "yes", checkexpession = "MobileOrPhone" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">
                部门 <span style="color:red;">*</span>
            </label>
            <div class="col-xs-10">
                @Html.TextBoxFor(x => x.DeptName, new { @class = "form-control", @readonly = "readonly", isvalid = "yes", checkexpession = "NotNull", onclick = "selectDept('', 0, 0, '选择部门', window.document.body, 'DeptName,DeptCode,DeptId','')" })
                @Html.HiddenFor(x => x.DeptId)
                @Html.HiddenFor(x => x.DeptCode)
            </div>
        </div>
        @*<div class="form-group">
                <label class="col-xs-2 control-label">
                    标签电量
                </label>
                <div class="col-xs-10">
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.Power, new { @class = "form-control", maxlength = "2", disabled = "disabled" })
                        <div class="input-group-addon">%</div>
                    </div>
                </div>
            </div>*@
        <div class="form-group">
            <label class="col-xs-2 control-label">
                绑定时间
            </label>
            <div class="col-xs-10">
                @Html.TextBoxFor(x => x.BindTime, new { @class = "form-control", Value = Model.BindTime == null ? string.Empty : Model.BindTime.Value.ToString("yyyy-MM-dd HH:mm"), onfocus = "blur();" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-2 control-label">
                操作人
            </label>
            <div class="col-xs-10">
                @Html.TextBoxFor(x => x.Operator, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
    </div>
</div>
