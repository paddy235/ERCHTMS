@{
    ViewBag.Title = "选择危险因素";
    Layout = "~/Views/Shared/_Form.cshtml";
}
<script>
    var Code = request('Code');
    var checkMode = request('checkMode');
    var mode = request('mode');
    var deptIds = request('deptIds');
    var keyword = "";
    $(function () {
        initControl();
    })
    //初始化数据
    function initControl() {
        bindTree();
        //绑定回车方法用于搜索
        $("#search").bind('keypress', function (event) {
            if (event.keyCode == 13) {
                keyword = $("#search").val();
                bindTree();
                //用于阻止后面不知名方法
                return false;
            }
        });
    }

    function bindTree() {
        var item = {
            cascadecheck: false,
            height: 540,
            showcheck: true,
            url: "../../OccupationalHealthManage/Hazardfactors/GetOccpuationalTreeJson?Code=" + Code + "&keyword=" + keyword + "&checkMode=" + checkMode + "&mode=" + mode + "&deptIds=" + deptIds,
            isTool: true
            //自定义工具栏
            //,nodeTools: [{
            //    text: '编辑', img: "test.png", callback: function (i) {
            //        alert(i);
            //    }
            //}]
        };
        $("#Tree").treeview(item);
    }
    //返回选择后的结果并赋值到dom控件
    //winObject:窗体中需要查找domId的对象，一般可写成window.document.body
    //domId：接收返回值的dom节点的ID，多个用逗号分隔，顺序依次为部门名称,部门Code，部门Id（多选用逗号分隔）
    function AcceptClick(winObject, domId, _win) {

        var selVal = new Array();
        if (winObject != undefined && domId != undefined) {
            if (domId.length > 0) {
                var Tree = $("#Tree");
                if (checkMode == 1) {
                    selVal = new Array(Tree.getCheckedTexts().join('|'), Tree.getCheckedValues().join('|'), Tree.getCheckedIds().join('|'));
                } else {
                    var currentNode = Tree.getCurrentNode();
                    var manager = "";
                    var managerId = "";
                    var isOrg = "0";
                    if (currentNode.manager != undefined && currentNode.manager != null) {
                        var arr = currentNode.manager.split(',');
                        if (arr.length > 0) {
                            manager = arr[0]; managerId = arr[1]; isOrg = arr[2];
                        }
                    }
                    selVal = new Array(currentNode.text, currentNode.value, currentNode.id, manager, managerId, isOrg);
                }

                var ids = domId.split(',');
                for (var j = 0; j < ids.length; j++) {
                    if (ids[j].length > 0) {
                        var dom = $(winObject).find("#" + ids[j]).eq(0);
                        if (dom != undefined) {
                            dom.val(selVal[j]);
                        }
                    }
                }
            }

            if (_win != undefined) {
                if (typeof (_win.callBackSelect) == "function") {
                    _win.callBackSelect();
                }

            }
            dialogClose();
        }
    }



    function PostSubmit(winObject, domId) {
        var selVal = new Array();
        if (winObject != undefined && domId != undefined) {
            if (domId.length > 0) {
                var Tree = $("#Tree");
                if (checkMode == 1) {
                    selVal = new Array(Tree.getCheckedTexts(), Tree.getCheckedValues(), Tree.getCheckedIds());
                } else {
                    var currentNode = Tree.getCurrentNode();
                    var manager = "";
                    var managerId = "";
                    if (currentNode.manager != undefined && currentNode.manager != null) {
                        var arr = currentNode.manager.split(',');
                        if (arr.length > 0) {
                            manager = arr[0]; managerId = arr[1];
                        }
                    }
                    selVal = new Array(currentNode.text, currentNode.value, currentNode.id, manager, managerId);
                }
                //var ids = domId.split(',');
                //$.ajax({
                //    url: "../../BaseManage/Department/GetType?keyValue=" + currentNode.id,
                //    type: "post",
                //    dataType: "json",
                //    async: false,
                //    success: function (data) {
                //        if (data == true) {
                //            for (var j = 0; j < ids.length; j++) {
                //                if (ids[j].length > 0) {
                //                    var dom = $(winObject).find("#" + ids[j]).eq(0);
                //                    if (dom != undefined) {
                //                        dom.val(selVal[j]);
                //                    }
                //                }

                //            }
                //        }
                //        else {
                //            dialogMsg('此节点不能选择！', 2);
                //        }
                //    },
                //});
            }
            dialogClose();
        }
    }


</script>
<div style="margin: 10px;">
    <div class="ui-select-option-search"><input id="search" type="text" class="form-control" placeholder="输入关键字,按Enter键搜索" /><span class="input-query" title="Search"><i class="fa fa-search"></i></span></div>
    <div id="Tree"></div>
</div>
